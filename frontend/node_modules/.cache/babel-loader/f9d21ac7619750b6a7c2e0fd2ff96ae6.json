{"ast":null,"code":"var _jsxFileName = \"/Users/liuxiaonan/term project/frontend/src/screens/PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport CheckoutSteps from '../component/Checkout';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaymentMethodScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      shippingAddress,\n      paymentMethod\n    }\n  } = state;\n  const [paymentMethodName, setPaymentMethod] = useState(paymentMethod || 'PayPal');\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_PAYMENT_METHOD',\n      payload: paymentMethodName\n    });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container small-container\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: \"PayPal\",\n            label: \"PayPal\",\n            value: \"PayPal\",\n            checked: paymentMethodName === 'PayPal',\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            id: \"CreditCard\",\n            label: \"CreditCard\",\n            value: \"CreditCard\",\n            checked: paymentMethodName === 'CreditCard',\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"warning\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentMethodScreen, \"tEORxOqR8ZEczFgoAKH1RY11sNE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PaymentMethodScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethodScreen\");","map":{"version":3,"sources":["/Users/liuxiaonan/term project/frontend/src/screens/PaymentScreen.js"],"names":["React","useContext","useEffect","useState","Helmet","useNavigate","Form","Button","CheckoutSteps","Store","PaymentMethodScreen","navigate","state","dispatch","ctxDispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethod","address","submitHandler","e","preventDefault","type","payload","localStorage","setItem","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport CheckoutSteps from '../component/Checkout';\nimport { Store } from '../Store';\n\nexport default function PaymentMethodScreen() {\n    const navigate = useNavigate();\n    const { state, dispatch: ctxDispatch } = useContext(Store);\n    const {\n        cart: { shippingAddress, paymentMethod },\n    } = state;\n\n    const [paymentMethodName, setPaymentMethod] = useState(\n        paymentMethod || 'PayPal'\n    );\n\n    useEffect(() => {\n        if (!shippingAddress.address) {\n            navigate('/shipping');\n        }\n    }, [shippingAddress, navigate]);\n    const submitHandler = (e) => {\n        e.preventDefault();\n        ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\n        localStorage.setItem('paymentMethod', paymentMethodName);\n        navigate('/placeorder');\n    };\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\n            <div className=\"container small-container\">\n                <Helmet>\n                    <title>Payment Method</title>\n                </Helmet>\n                <h1 className=\"my-3\">Payment Method</h1>\n                <Form onSubmit={submitHandler}>\n                    <div className=\"mb-3\">\n                        <Form.Check\n                            type=\"radio\"\n                            id=\"PayPal\"\n                            label=\"PayPal\"\n                            value=\"PayPal\"\n                            checked={paymentMethodName === 'PayPal'}\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <Form.Check\n                            type=\"radio\"\n                            id=\"CreditCard\"\n                            label=\"CreditCard\"\n                            value=\"CreditCard\"\n                            checked={paymentMethodName === 'CreditCard'}\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <Button type=\"submit\" variant=\"warning\">Continue</Button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}