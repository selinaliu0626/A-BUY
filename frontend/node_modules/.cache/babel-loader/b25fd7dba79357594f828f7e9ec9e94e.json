{"ast":null,"code":"var _jsxFileName = \"/Users/liuxiaonan/A-buy/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useReducer } from \"@types/react\";\nimport logger from \"use-reducer-logger\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        products: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n  _s();\n\n  const params = useParams();\n  const {\n    slug\n  } = params;\n  const [{\n    loading,\n    error,\n    products\n  }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: result.data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: err.message\n        });\n        const result = await axios.get('./api/products'); // setProducts(result.data);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: slug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductScreen, \"KEvkS+LNmL/UpfuPdNR7qeO44F0=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/Users/liuxiaonan/A-buy/frontend/src/screens/ProductScreen.js"],"names":["useParams","useEffect","useReducer","logger","axios","reducer","state","action","type","loading","products","payload","error","ProductScreen","params","slug","dispatch","fetchData","result","get","data","err","message"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,cAApC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAUG,QAAAA,OAAO,EAAC;AAAlB,OAAP;;AACF,SAAI,eAAJ;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAUI,QAAAA,QAAQ,EAAEH,MAAM,CAACI,OAA3B;AAAoCF,QAAAA,OAAO,EAAC;AAA5C,OAAP;;AACF,SAAI,YAAJ;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAUG,QAAAA,OAAO,EAAE,KAAnB;AAA0BG,QAAAA,KAAK,EAACL,MAAM,CAACI;AAAvC,OAAP;;AACF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXD;;AAaA,SAASO,aAAT,GAAyB;AAAA;;AAEvB,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAWD,MAAjB;AACA,QAAK,CAAC;AAACL,IAAAA,OAAD;AAASG,IAAAA,KAAT;AAAeF,IAAAA;AAAf,GAAD,EAA0BM,QAA1B,IAAsCd,UAAU,CAACC,MAAM,CAACE,OAAD,CAAP,EAAiB;AACpEK,IAAAA,QAAQ,EAAC,EAD2D;AAEpED,IAAAA,OAAO,EAAC,IAF4D;AAGpEG,IAAAA,KAAK,EAAC;AAH8D,GAAjB,CAArD;AAKAX,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMgB,SAAS,GAAG,YAAY;AAC5BD,MAAAA,QAAQ,CAAC;AAACR,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAR;;AACA,UAAG;AACD,cAAMU,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,eAAV,CAArB;AACAH,QAAAA,QAAQ,CAAC;AAACR,UAAAA,IAAI,EAAC,eAAN;AAAsBG,UAAAA,OAAO,EAACO,MAAM,CAACE;AAArC,SAAD,CAAR;AACD,OAHD,CAGC,OAAOC,GAAP,EAAY;AACXL,QAAAA,QAAQ,CAAC;AACPR,UAAAA,IAAI,EAAE,YADC;AACaG,UAAAA,OAAO,EAAEU,GAAG,CAACC;AAD1B,SAAD,CAAR;AAGA,cAAMJ,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,gBAAV,CAArB,CAJW,CAKX;AACD;AACF,KAZD;;AAaAF,IAAAA,SAAS;AACV,GAfQ,EAeP,EAfO,CAAT;AAgBA,sBACE;AAAA,2BACE;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA9BQF,a;UAEQb,S;;;KAFRa,a;AA+BT,eAAeA,aAAf","sourcesContent":["import { useParams } from 'react-router-dom';\nimport {useEffect, useReducer} from \"@types/react\";\nimport logger from \"use-reducer-logger\";\nimport axios from \"axios\";\nconst reducer = (state,action) =>{\n  switch (action.type){\n    case 'FETCH_REQUEST':\n      return {...state,loading:true};\n    case'FETCH_SUCCESS':\n      return {...state,products: action.payload, loading:false};\n    case'FETCH_FAIL':\n      return {...state,loading: false, error:action.payload};\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n\n  const params = useParams();\n  const { slug } = params;\n  const[{loading,error,products},dispatch] = useReducer(logger(reducer),{\n    products:[],\n    loading:true,\n    error:'',\n  });\n  useEffect(() =>{\n    const fetchData = async () => {\n      dispatch({type:'FETCH_REQUEST'});\n      try{\n        const result = await axios.get('/api/products');\n        dispatch({type:'FETCH_SUCCESS',payload:result.data});\n      }catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL', payload: err.message\n        });\n        const result = await axios.get('./api/products');\n        // setProducts(result.data);\n      }\n    };\n    fetchData();\n  },[]);\n  return (\n    <div>\n      <h1>{slug}</h1>\n    </div>\n  );\n}\nexport default ProductScreen;\n"]},"metadata":{},"sourceType":"module"}